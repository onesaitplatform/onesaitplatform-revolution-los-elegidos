version: '3'

services:

  mqtt:
    restart: always
    image: onesaitplatform/edge-mqtt:community
    container_name: edge.mqtt
    volumes:
      - /mosquitto/log
      - /mosquitto/data
    ports:
      - 1883:1883
    networks:
      edgenet:
        aliases:
          - mqtt

  nodered:
    restart: always
    image: onesaitplatform/edge-nodered:community
    container_name: edge.nodered
    volumes:
      - /home/node
    ports:
      - 1880:8080
    networks:
      edgenet:
        aliases:
          - nodered

  database:
    restart: always
    image: onesaitplatform/edge-database:community
    container_name: edge.database
    environment:
      CONTAINER_TIMEZONE: Europe/Madrid
      INFLUXDB_SHARD_PRECREATION_ENABLED: 1
      MQTT_HOST: mqtt
      MQTT_PORT: 1883
      MQTT_TOPIC: topic/data
    volumes:
      - /var/lib/influxdb
    depends_on:
      - mqtt
    ports:
      - 5300:5300
      - 8086:8086
    networks:
      edgenet:
        aliases:
          - database
 
# tag::cAdvisor[]
  cadvisor:
    restart: always
    image: google/cadvisor:latest # <1>
    container_name: edge.cadvisor # <2>
    volumes: # <3>
#      - /:/rootfs:ro
      - /var/run:/var/run:rw #<1
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    depends_on: # <4>
      - database
    command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=database:8086 # <5>
    networks:
      edgenet:
        aliases:
          - cadvisor
# end::cAdvisor[]

# tag::prometheus[]
  prometheus:
    restart: always
    image: prom/prometheus:latest # <1>
    container_name: edge.prometheus # <2>
    ports: # <3>
      - 9090
    volumes: # <4>
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - ./prometheus/data:/prometheus
    depends_on: # <5>
      - database
    networks:
      edgenet:
        aliases:
          - prometheus
# end::prometheus[]

  alertmanager:
    restart: always
    image: prom/alertmanager:latest
    container_name: edge.alertmanager
    ports:
      - 9093
    networks:
      edgenet:
        aliases:
          - alertmanager

  nodeexporter:
    restart: always
    image: prom/node-exporter:latest
    container_name: edge.nodeexporter
    ports:
      - 9100
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      edgenet:
        aliases:
          - nodeexporter

# tag::grafana[]
  grafana:
    restart: always
    image: grafana/grafana:latest
    container_name: edge.grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    networks:
      edgenet:
        aliases:
          - grafana
# end::grafana[]

networks:
  edgenet:
    driver: bridge
